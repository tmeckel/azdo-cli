// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/microsoft/azure-devops-go-api/azuredevops/v7/operations (interfaces: Client)
//
// Generated by this command:
//
//	mockgen -package=mocks -destination internal/mocks/operations_client_mock.go -mock_names Client=MockOperationsClient github.com/microsoft/azure-devops-go-api/azuredevops/v7/operations Client
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	operations "github.com/microsoft/azure-devops-go-api/azuredevops/v7/operations"
	gomock "go.uber.org/mock/gomock"
)

// MockOperationsClient is a mock of Client interface.
type MockOperationsClient struct {
	ctrl     *gomock.Controller
	recorder *MockOperationsClientMockRecorder
	isgomock struct{}
}

// MockOperationsClientMockRecorder is the mock recorder for MockOperationsClient.
type MockOperationsClientMockRecorder struct {
	mock *MockOperationsClient
}

// NewMockOperationsClient creates a new mock instance.
func NewMockOperationsClient(ctrl *gomock.Controller) *MockOperationsClient {
	mock := &MockOperationsClient{ctrl: ctrl}
	mock.recorder = &MockOperationsClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOperationsClient) EXPECT() *MockOperationsClientMockRecorder {
	return m.recorder
}

// GetOperation mocks base method.
func (m *MockOperationsClient) GetOperation(arg0 context.Context, arg1 operations.GetOperationArgs) (*operations.Operation, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOperation", arg0, arg1)
	ret0, _ := ret[0].(*operations.Operation)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOperation indicates an expected call of GetOperation.
func (mr *MockOperationsClientMockRecorder) GetOperation(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOperation", reflect.TypeOf((*MockOperationsClient)(nil).GetOperation), arg0, arg1)
}
